version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    # working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8.12.0 # ...with this image as the primary container; this is where all `steps` will run
      # - image: influxdb:1.6 # and this image as the secondary service container
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: yarn install
          command: 'yarn install'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: yarn-install-after-restore
          command: yarn install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: yarn test
      - run: # run coverage report
          name: code-coverage report generation and upload
          command: 'yarn test --coverage && yarn codecov -t 1034d70c-6870-4421-986f-6ac405850292'
      # - store_artifacts: # special step to save test results as as artifact
      #     # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #     path: coverage
      #     prefix: coverage
      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: test-results.xml
      # # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
